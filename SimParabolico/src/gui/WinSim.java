/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;
import logica.MovParavolico;

/**
 *
 * @author Jesus
 */
public class WinSim extends javax.swing.JFrame {

    /**
     * Creates new form WinSim
     */
    public WinSim() {
        //this.setUndecorated(true);
        initComponents();
        myinit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        pCentro = new javax.swing.JPanel();
        pPrmBasicos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spAngulo = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        spVel = new javax.swing.JSpinner();
        spVelViento = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spFin = new javax.swing.JSpinner();
        spInicio = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pSim = new javax.swing.JPanel();
        pTiempo = new javax.swing.JPanel();
        slTiempo = new javax.swing.JSlider();
        bPlay = new javax.swing.JButton();
        bStop = new javax.swing.JButton();
        bNext = new javax.swing.JButton();
        bPrev = new javax.swing.JButton();
        lTiempo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPX = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tPY = new javax.swing.JTextPane();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tTiempo = new javax.swing.JTextPane();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tCX = new javax.swing.JTextPane();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tCY = new javax.swing.JTextPane();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador - Tiro Parabolico");
        setMinimumSize(new java.awt.Dimension(929, 598));

        pCentro.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pPrmBasicos.setBackground(new java.awt.Color(204, 204, 204));
        pPrmBasicos.setBorder(javax.swing.BorderFactory.createTitledBorder("Parametros Basicos"));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel1.setText("Angulo");

        spAngulo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spAnguloStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel2.setText("Velocidad Veinto");

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel3.setText("Velocidad");

        spVel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spVelStateChanged(evt);
            }
        });

        spVelViento.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spVelVientoStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel4.setText("Intervalo de Tiempo");

        spFin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spFinStateChanged(evt);
            }
        });

        spInicio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spInicioStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel5.setText("Inicio");

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel6.setText("Fin");

        jLabel10.setText("grados");

        jLabel11.setText("m/s");

        jLabel12.setText("m/s");

        jLabel13.setText("s");

        jLabel14.setText("s");

        javax.swing.GroupLayout pPrmBasicosLayout = new javax.swing.GroupLayout(pPrmBasicos);
        pPrmBasicos.setLayout(pPrmBasicosLayout);
        pPrmBasicosLayout.setHorizontalGroup(
            pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPrmBasicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pPrmBasicosLayout.createSequentialGroup()
                        .addComponent(spVelViento, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addGroup(pPrmBasicosLayout.createSequentialGroup()
                        .addComponent(spVel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11))
                    .addGroup(pPrmBasicosLayout.createSequentialGroup()
                        .addComponent(spAngulo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addGroup(pPrmBasicosLayout.createSequentialGroup()
                        .addComponent(spFin, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14))
                    .addGroup(pPrmBasicosLayout.createSequentialGroup()
                        .addComponent(spInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pPrmBasicosLayout.setVerticalGroup(
            pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPrmBasicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spAngulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spVel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spVelViento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrmBasicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 100));

        pSim.setBackground(new java.awt.Color(204, 255, 255));
        pSim.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pSim.setMinimumSize(new java.awt.Dimension(600, 400));
        pSim.setPreferredSize(new java.awt.Dimension(600, 400));
        pSim.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                pSimComponentResized(evt);
            }
        });

        javax.swing.GroupLayout pSimLayout = new javax.swing.GroupLayout(pSim);
        pSim.setLayout(pSimLayout);
        pSimLayout.setHorizontalGroup(
            pSimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );
        pSimLayout.setVerticalGroup(
            pSimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );

        pTiempo.setBackground(new java.awt.Color(204, 255, 255));
        pTiempo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        slTiempo.setMajorTickSpacing(20);
        slTiempo.setMinorTickSpacing(2);
        slTiempo.setPaintLabels(true);
        slTiempo.setPaintTicks(true);
        slTiempo.setValue(0);
        slTiempo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slTiempoStateChanged(evt);
            }
        });
        slTiempo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                slTiempoPropertyChange(evt);
            }
        });

        bPlay.setToolTipText("Play");
        bPlay.setBorderPainted(false);
        bPlay.setContentAreaFilled(false);
        bPlay.setMargin(new java.awt.Insets(2, 0, 2, 0));
        bPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPlayActionPerformed(evt);
            }
        });

        bStop.setToolTipText("Stop");
        bStop.setBorderPainted(false);
        bStop.setContentAreaFilled(false);
        bStop.setMargin(new java.awt.Insets(2, 0, 2, 0));
        bStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStopActionPerformed(evt);
            }
        });

        bNext.setToolTipText("Adelantar");
        bNext.setBorderPainted(false);
        bNext.setContentAreaFilled(false);
        bNext.setMargin(new java.awt.Insets(2, 0, 2, 0));
        bNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextActionPerformed(evt);
            }
        });

        bPrev.setToolTipText("Regresar");
        bPrev.setBorderPainted(false);
        bPrev.setContentAreaFilled(false);
        bPrev.setMargin(new java.awt.Insets(2, 0, 2, 0));
        bPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrevActionPerformed(evt);
            }
        });

        lTiempo.setText("Time");

        javax.swing.GroupLayout pTiempoLayout = new javax.swing.GroupLayout(pTiempo);
        pTiempo.setLayout(pTiempoLayout);
        pTiempoLayout.setHorizontalGroup(
            pTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTiempoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pTiempoLayout.createSequentialGroup()
                        .addComponent(bPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bStop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bNext, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lTiempo)))
                .addContainerGap())
        );
        pTiempoLayout.setVerticalGroup(
            pTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTiempoLayout.createSequentialGroup()
                .addComponent(slTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bStop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bNext, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lTiempo))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pSim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pSim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulacion Actual"));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel7.setText("Posición");

        tPX.setEditable(false);
        jScrollPane1.setViewportView(tPX);

        tPY.setEditable(false);
        jScrollPane2.setViewportView(tPY);

        jLabel15.setText("m");

        jLabel16.setText("m");

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel8.setText("X");

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel9.setText("Y");

        jLabel18.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel18.setText("Tiempo");

        tTiempo.setEditable(false);
        jScrollPane3.setViewportView(tTiempo);

        jLabel19.setText("s");

        jLabel17.setFont(new java.awt.Font("Berlin Sans FB", 0, 16)); // NOI18N
        jLabel17.setText("Campo");

        tCX.setEditable(false);
        jScrollPane4.setViewportView(tCX);

        jLabel20.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel20.setText("X");

        jLabel21.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel21.setText("Y");

        tCY.setEditable(false);
        jScrollPane5.setViewportView(tCY);

        jLabel22.setText("m");

        jLabel23.setText("m");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel22))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel23)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel20)))
                                    .addComponent(jLabel17)))
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))))
        );

        javax.swing.GroupLayout pCentroLayout = new javax.swing.GroupLayout(pCentro);
        pCentro.setLayout(pCentroLayout);
        pCentroLayout.setHorizontalGroup(
            pCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pCentroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pPrmBasicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pCentroLayout.setVerticalGroup(
            pCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCentroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pCentroLayout.createSequentialGroup()
                        .addComponent(pPrmBasicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenu3.setText("Archivo");

        jMenuItem4.setText("Exportar");
        jMenu3.add(jMenuItem4);
        jMenu3.add(jSeparator1);

        jMenuItem3.setText("Acerca de ...");
        jMenu3.add(jMenuItem3);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu1.setText("Parametros");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");
        jMenu1.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");
        jMenu1.add(jCheckBoxMenuItem2);

        jMenuItem5.setText("jMenuItem5");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pCentro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pCentro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void slTiempoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slTiempoStateChanged
        if(estado != S_EXE && estado != SE_TIEMPO && upSlTime){
            double tiempo = (double)spInicio.getValue() + ((double) spFin.getValue() - (double)spInicio.getValue()) * slTiempo.getValue() / 100;        
            tTiempo.setText(String.format("%.2f", tiempo));
            posicionInicial(tiempo);
        }
    }//GEN-LAST:event_slTiempoStateChanged

    private void pSimComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pSimComponentResized
        //Actualizar por resize de pantalla
        pFondo.setSize(pSim.getWidth() - 4, pSim.getHeight() - 4);
        pMov.setBounds(2, 2, pSim.getWidth() - 4, pSim.getHeight() - SIZE_PASTO + 5);
        tCX.setText(String.valueOf(pSim.getWidth() / 2));
        tCY.setText(String.valueOf(pSim.getHeight() / 2));

        System.out.println("ancho:, " + pSim.getWidth() + ", alto: " + pSim.getHeight());
        System.out.println("fancho:, " + this.getWidth() + ", falto: " + this.getHeight());
    }//GEN-LAST:event_pSimComponentResized

    private void spFinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spFinStateChanged
        double i = (double) spInicio.getValue();
        double f = (double) spFin.getValue();
        checkEstado(i, f);
        updateSlider(i, f);
        posicionInicial(i);
        generarTrayectoria(i, f);
    }//GEN-LAST:event_spFinStateChanged

    private void spInicioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spInicioStateChanged
        double i = (double) spInicio.getValue();
        double f = (double) spFin.getValue();
        tTiempo.setText(String.valueOf(i));
        checkEstado(i, f);
        updateSlider(i, f);
        posicionInicial(i);
        generarTrayectoria(i, f);
    }//GEN-LAST:event_spInicioStateChanged

    private void bPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPlayActionPerformed
        if (estado == S_LISTA) {
            estado = S_EXE;
            if(Double.valueOf(tTiempo.getText()) == (double) spFin.getValue()){
                tTiempo.setText(spInicio.getValue().toString());
            }
            bPlay.setIcon(new ImageIcon(PAUSA.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
            bPlay.setRolloverIcon(new ImageIcon(PAUSA_P.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
            enableParms(false);
            new Thread(rCrono).start();
            moverBola();

        } else if (estado == S_PAUSA) {
            //Reanudar simulacion
            estado = S_EXE;
            bPlay.setIcon(new ImageIcon(PAUSA.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
            bPlay.setRolloverIcon(new ImageIcon(PAUSA_P.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
            moverBola();
        } else {
            //Pausar simulacion
            estado = S_PAUSA;
            bPlay.setIcon(new ImageIcon(PLAY.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
            bPlay.setRolloverIcon(new ImageIcon(PLAY_P.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
        }
    }//GEN-LAST:event_bPlayActionPerformed

    private void bStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStopActionPerformed
        estado = S_LISTA;
        lTiempo.setText("Simulación: 0 seg");
        tPX.setText("0.0");
        tPY.setText("0.0");
        tTiempo.setText("0.0");
        slTiempo.setValue(0);
        enableParms(true);

        double i = (double) spInicio.getValue();
        posicionInicial(i);
        bPlay.setIcon(new ImageIcon(PLAY.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
        bPlay.setRolloverIcon(new ImageIcon(PLAY_P.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
    }//GEN-LAST:event_bStopActionPerformed

    private void spAnguloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spAnguloStateChanged
        double i = (double) spInicio.getValue();
        double f = (double) spFin.getValue();
        checkEstado(i, f);
        posicionInicial(i);
        generarTrayectoria(i, f);
    }//GEN-LAST:event_spAnguloStateChanged

    private void spVelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spVelStateChanged
        double i = (double) spInicio.getValue();
        double f = (double) spFin.getValue();
        checkEstado(i, f);
        posicionInicial(i);
        generarTrayectoria(i, f);
    }//GEN-LAST:event_spVelStateChanged

    private void spVelVientoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spVelVientoStateChanged
        double i = (double) spInicio.getValue();
        double f = (double) spFin.getValue();
        checkEstado(i, f);
        posicionInicial(i);
        generarTrayectoria(i, f);
    }//GEN-LAST:event_spVelVientoStateChanged

    private void bNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextActionPerformed
        double tiempo = Double.valueOf(tTiempo.getText());
        double inicio = (double)spInicio.getValue();
        double fin = (Double) spFin.getValue();
        boolean tope = false;
        
        if(tiempo + 0.1 <= fin){
            tiempo = tiempo + 0.1;
        }else if(tiempo == fin){
            tope = true;
        }else{
            tiempo = fin;
        }
        tTiempo.setText(String.format("%.2f", tiempo));
        
        if(!tope){
            posicionInicial(tiempo);
            upSlTime = false;
            slTiempo.setValue((int) ((tiempo - inicio)  * 100 / fin - inicio) + 1);
            upSlTime = true;
        }    
    }//GEN-LAST:event_bNextActionPerformed

    private void bPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrevActionPerformed
        double tiempo = Double.valueOf(tTiempo.getText());
        double inicio = (Double) spInicio.getValue();
        boolean tope = false;
        
        if(inicio <= tiempo - 0.1){
            tiempo = tiempo - 0.1;
        }else if(tiempo == inicio){
            tope = true;
        }else{
            tiempo = inicio;
        }
        tTiempo.setText(String.format("%.2f", tiempo));
        
        if(!tope){
            posicionInicial(tiempo);
            upSlTime = false;
            slTiempo.setValue((int) ((tiempo - inicio) * 100 / (double)spFin.getValue() - inicio) + 1);
            upSlTime = true;
        }
    }//GEN-LAST:event_bPrevActionPerformed

    private void slTiempoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_slTiempoPropertyChange
        System.out.println("can");
    }//GEN-LAST:event_slTiempoPropertyChange

    private void myinit() {
        this.estado = 0;
        this.dirViento = -1;
        this.upSlTime = true;
        pCentro.setBackground(new Color(0, 0, 0, 15));

        //Panel del fondo (paisaje)
        pFondo = new panelImg();
        pFondo.setBounds(2, 2, pSim.getWidth() - 4, pSim.getHeight() - 4);
        pFondo.setBackground(new Color(0, 0, 0, 0));
        pFondo.setOpaque(false);
        pSim.add(pFondo);

        //Panel moviento
        pMov = new panelMov();
        pMov.setBounds(2, 2, pSim.getWidth() - 4, pSim.getHeight() - SIZE_PASTO + 5);
        pMov.setBackground(new Color(0, 0, 0, 0));
        pMov.setOpaque(true);
        pSim.add(pMov, 0);

        //Panel moviento
        pLin = new panelLin();
        pLin.setBounds(2, 2, pSim.getWidth() - 4, pSim.getHeight() - SIZE_PASTO + 5);
        pLin.setBackground(new Color(0, 0, 0, 0));
        pLin.setOpaque(true);
        pSim.add(pLin, 1);

        //Configuracion de spinners
        spAngulo.setModel(new SpinnerNumberModel(0.0, 0.0, 90.0, 0.1));
        spVel.setModel(new SpinnerNumberModel(0.0, 0.0, null, 0.1));
        spVelViento.setModel(new SpinnerNumberModel(0.0, 0.0, null, 0.1));
        spInicio.setModel(new SpinnerNumberModel(0.0, 0.0, null, 0.1));
        spFin.setModel(new SpinnerNumberModel(0.0, 0.0, null, 0.1));

        //Confugurar botones de reproduccion
        bPlay.setIcon(new ImageIcon(PLAY.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
        bPlay.setRolloverIcon(new ImageIcon(PLAY_P.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
        bStop.setIcon(new ImageIcon(STOP.getImage().getScaledInstance(bStop.getWidth(), bStop.getHeight(), Image.SCALE_DEFAULT)));
        bStop.setRolloverIcon(new ImageIcon(STOP_P.getImage().getScaledInstance(bStop.getWidth(), bStop.getHeight(), Image.SCALE_DEFAULT)));
        bPrev.setIcon(new ImageIcon(PREV.getImage().getScaledInstance(bPrev.getWidth(), bPrev.getHeight(), Image.SCALE_DEFAULT)));
        bPrev.setRolloverIcon(new ImageIcon(PREV_P.getImage().getScaledInstance(bPrev.getWidth(), bPrev.getHeight(), Image.SCALE_DEFAULT)));
        bNext.setIcon(new ImageIcon(NEXT.getImage().getScaledInstance(bNext.getWidth(), bNext.getHeight(), Image.SCALE_DEFAULT)));
        bNext.setRolloverIcon(new ImageIcon(NEXT_P.getImage().getScaledInstance(bNext.getWidth(), bNext.getHeight(), Image.SCALE_DEFAULT)));

        //Valores de Simulacion
        lTiempo.setText("Simulación: 0 seg");
        tPX.setText("0.0");
        tPY.setText("0.0");
        tTiempo.setText("0.0");
        tCX.setText(String.valueOf(pSim.getWidth() / 2));
        tCY.setText(String.valueOf(pSim.getHeight() / 2));

        double i = (double) spInicio.getValue();
        double f = (double) spFin.getValue();
        checkEstado(i, f);
        updateSlider(i, f);
    }
    
    private void enableParms(boolean flag){
        spAngulo.setEnabled(flag);
        spVel.setEnabled(flag);
        spVelViento.setEnabled(flag);
        spInicio.setEnabled(flag);
        spFin.setEnabled(flag);
    }

    private void updateSlider(double i, double f) {
        double can = f - i;

        if (f > i) {
            slTiempo.setEnabled(true);
            Hashtable<Integer, JLabel> labelTable = new Hashtable();
            labelTable.put(0, new JLabel(String.format("%.2f", i)));
            labelTable.put(20, new JLabel(String.format("%.2f", i + (can * 20 / 100))));
            labelTable.put(40, new JLabel(String.format("%.2f", i + (can * 40 / 100))));
            labelTable.put(60, new JLabel(String.format("%.2f", i + (can * 60 / 100))));
            labelTable.put(80, new JLabel(String.format("%.2f", i + (can * 80 / 100))));
            labelTable.put(100, new JLabel(String.format("%.2f", f)));
            slTiempo.setLabelTable(labelTable);
        } else {
            Hashtable<Integer, JLabel> labelTable = new Hashtable();
            labelTable.put(50, new JLabel(String.format("Tiempo Incorrecto", i)));
            slTiempo.setLabelTable(labelTable);
            slTiempo.setEnabled(false);
        }
    }

    private void generarTrayectoria(double i, double f) {
        MovParavolico mp = new MovParavolico((double) spAngulo.getValue() * 2.0 * Math.PI / 360, (double) spVel.getValue(), dirViento * (double) spVelViento.getValue());

        if (f > i) {
            //Cordenadas
            int size = (int) ((f - i) / 0.1);
            int[] xCoords = new int[size];
            int[] yCoords = new int[size];

            //Simular tiempo en segundos
            for (int j = 0; j < size; j++) {
                mp.setTiempo(i + j * 0.1);
                xCoords[j] = (int) (mp.getPosX() * 2 + POS_START);
                yCoords[j] = (int) (pLin.getHeight() - mp.getPosY() * 2);
                //System.out.println("Segundo: " + (i + j * 0.1) + " x: " + (int) (mp.getPosX() ) +", y " + (int) (mp.getPosY() * 2) );
            }

            pLin.setxCoords(xCoords);
            pLin.setyCoords(yCoords);
        } else {
            pLin.setxCoords(null);
            pLin.setyCoords(null);
        }

        //Actualziar simulador
        pSim.updateUI();
    }

    private void checkEstado(double i, double f) {
        if (f > i) {
            estado = S_LISTA; //Ok
        } else {
            estado = SE_TIEMPO; //Error de tiempo 
        }
    }

    private void posicionInicial(double time) {
        MovParavolico mp = new MovParavolico((double) spAngulo.getValue() * 2.0 * Math.PI / 360, (double) spVel.getValue(), dirViento * (double) spVelViento.getValue());
        mp.setTiempo(time);
        
        tPX.setText(String.format("%.2f", mp.getPosX()));
        tPY.setText(String.format("%.2f", mp.getPosY()));
        tTiempo.setText(String.format("%.2f", time));
        pMov.setMovP(mp);
        pSim.updateUI();
    }

    private void moverBola() {
        new Thread(new Runnable() {

            @Override
            public void run() {
                movP = new MovParavolico((double) spAngulo.getValue() * 2.0 * Math.PI / 360, (double) spVel.getValue(), dirViento * (double) spVelViento.getValue());
                pMov.setMovP(movP);
                
                //Tiempo               
                double inicio = Double.parseDouble(tTiempo.getText());
                double fin = (double) spFin.getValue();
                double can = fin - (double) spInicio.getValue();
                
                //Simular tiempo en segundos                
                double tActual = inicio;                
                while(tActual <= fin && estado == S_EXE){
                    try {
                        movP.setTiempo(tActual);
                        tPX.setText(String.format("%.2f", movP.getPosX()));
                        tPY.setText(String.format("%.2f", movP.getPosY()));
                        tTiempo.setText(String.format("%.2f", tActual));
                        slTiempo.setValue((int) ((tActual - (double) spInicio.getValue()) * 100 / can) + 1);
                        pSim.updateUI();
                        Thread.sleep(50);
                        //System.out.println("Segundo: " + i + ", X: " + (int)movP.getPosX() + ", Y:" + (int)movP.getPosY());
                    } catch (InterruptedException ex) {
                        Logger.getLogger(WinSim.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    if(tActual + 0.1 <= fin || tActual == fin){
                        tActual = tActual + 0.1;
                    }else{
                        tActual = fin;
                    }
                }

                if (estado == S_EXE) {
                    //Simulacion terminada correctamente
                    estado = S_LISTA;
                    bPlay.setIcon(new ImageIcon(PLAY.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
                    bPlay.setRolloverIcon(new ImageIcon(PLAY_P.getImage().getScaledInstance(bPlay.getWidth(), bPlay.getHeight(), Image.SCALE_DEFAULT)));
                    enableParms(true);
                }
            }
        }).start();
    }

    //Clases extendidas de jpanel
    class panelImg extends JPanel {

        public panelImg() {
            super();
        }

        private Color color1 = new Color(34, 148, 219);
        private Color color2 = Color.white;

        public Color getColor1() {
            return color1;
        }

        public void setColor1(Color color1) {
            this.color1 = color1;
        }

        public Color getColor2() {
            return color2;
        }

        public void setColor2(Color color2) {
            this.color2 = color2;
        }

        @Override
        public void paint(Graphics g) {
            //Dibujar Degradado
            Graphics2D g2 = (Graphics2D) g;
            g2.setPaint(new GradientPaint(0.0f, 0.0f, color1.brighter(), 0.0f, getHeight(), color2.brighter()));
            g2.fillRect(0, 0, super.getWidth(), super.getHeight() - SIZE_PASTO + 10);

            //Dibujar Pasto
            for (int i = 0; i < super.getWidth(); i++) {
                g.drawImage(PASTO.getImage(), SIZE_PASTO * i, super.getHeight() - SIZE_PASTO, SIZE_PASTO, SIZE_PASTO, null);
            }

            //Dibujar sol
            g.drawImage(SOL.getImage(), super.getWidth() - 150, 20, 70, 60, null);

            //Dibujar nubes
            g.drawImage(NUBE.getImage(), 20, 10, 80, 40, null); //x, y, width, heigth
            g.drawImage(NUBE2.getImage(), super.getWidth() - 30, 30, 50, 20, null); //x, y, width, heigth

            super.paintComponent(g);
        }
    }

    class panelMov extends JPanel {

        public panelMov() {
            super();
        }

        private MovParavolico movP;

        public MovParavolico getMovP() {
            return movP;
        }

        public void setMovP(MovParavolico movP) {
            this.movP = movP;
        }

        @Override
        public void paint(Graphics g) {

            g.setColor(Color.gray);
            
            if (movP == null) {
                g.drawImage(BOLA.getImage(), 50, this.getHeight() - SIZE_BOLA, SIZE_BOLA, SIZE_BOLA, null);
                //g.fillOval(50, this.getHeight() - CANON_DIA, CANON_DIA, CANON_DIA);
            } else {
                int y = this.getHeight() - (int) movP.getPosY() * 2 - SIZE_BOLA;
                int x = (int) movP.getPosX() * 2 + POS_START;
                System.out.println("X: " + x + " Y: " + y);
                g.drawImage(BOLA.getImage(), x, y, SIZE_BOLA, SIZE_BOLA, null);
                //g.fillOval((int) movP.getPosX() * 2 + 50, this.getHeight() - (int) movP.getPosY() * 2 - CANON_DIA, CANON_DIA, CANON_DIA);
            }
            super.paintComponent(g);
        }
    }

    class panelLin extends JPanel {

        private int[] xCoords, yCoords;

        public panelLin() {
            super();

        }

        public int[] getxCoords() {
            return xCoords;
        }

        public void setxCoords(int[] xCoords) {
            this.xCoords = xCoords;
        }

        public int[] getyCoords() {
            return yCoords;
        }

        public void setyCoords(int[] yCoords) {
            this.yCoords = yCoords;
        }

        @Override
        public void paint(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            //Linea Punteada
            float dash1[] = {5.0f};
            g2d.setStroke(new BasicStroke(1.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 5, dash1, 2));

            g.setColor(Color.red);
            if (xCoords != null && yCoords != null) {
                //g.drawPolygon(xCoords, yCoords, xCoords.length);
                g.drawPolyline(xCoords, yCoords, xCoords.length);
            }

            super.paintComponent(g);
        }
    }

    private Runnable rCrono = new Runnable() {

        private int segundos;

        @Override
        public void run() {
            segundos = 0;
            lTiempo.setText("Simulación: 0 seg");

            while (estado != S_LISTA) {
                if (estado == S_EXE) {
                    segundos++;
                    lTiempo.setText("Simulación: " + segundos + " seg");
                }
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(WinSim.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    };

    //Mis variables - Finales
    private final ImageIcon PASTO = new ImageIcon(getClass().getResource("/img/pasto.png"));
    private final ImageIcon SOL = new ImageIcon(getClass().getResource("/img/sol.png"));
    private final ImageIcon NUBE = new ImageIcon(getClass().getResource("/img/nube.png"));
    private final ImageIcon NUBE2 = new ImageIcon(getClass().getResource("/img/nube2.png"));
    private final ImageIcon PLAY = new ImageIcon(getClass().getResource("/img/play.png"));
    private final ImageIcon PLAY_P = new ImageIcon(getClass().getResource("/img/play_p.png"));
    private final ImageIcon STOP = new ImageIcon(getClass().getResource("/img/stop.png"));
    private final ImageIcon STOP_P = new ImageIcon(getClass().getResource("/img/stop_p.png"));
    private final ImageIcon PAUSA = new ImageIcon(getClass().getResource("/img/pausa.png"));
    private final ImageIcon PAUSA_P = new ImageIcon(getClass().getResource("/img/pausa_p.png"));
    private final ImageIcon PREV = new ImageIcon(getClass().getResource("/img/prev.png"));
    private final ImageIcon PREV_P = new ImageIcon(getClass().getResource("/img/prev_p.png"));
    private final ImageIcon NEXT = new ImageIcon(getClass().getResource("/img/next.png"));
    private final ImageIcon NEXT_P = new ImageIcon(getClass().getResource("/img/next_p.png"));
    private final ImageIcon BOLA = new ImageIcon(getClass().getResource("/img/bola.png"));
    private final int SIZE_PASTO = 60;
    private final int SIZE_BOLA = 15;
    private final int POS_START = 50;
    private final int S_LISTA = 0;
    private final int S_PAUSA = 1;
    private final int S_EXE = 2;
    private final int SE_TIEMPO = 3;

    //Mis variables
    private panelImg pFondo;
    private panelMov pMov;
    private panelLin pLin;
    private boolean upSlTime;

    private MovParavolico movP;
    private int estado, dirViento;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bNext;
    private javax.swing.JButton bPlay;
    private javax.swing.JButton bPrev;
    private javax.swing.JButton bStop;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lTiempo;
    private javax.swing.JPanel pCentro;
    private javax.swing.JPanel pPrmBasicos;
    private javax.swing.JPanel pSim;
    private javax.swing.JPanel pTiempo;
    private javax.swing.JSlider slTiempo;
    private javax.swing.JSpinner spAngulo;
    private javax.swing.JSpinner spFin;
    private javax.swing.JSpinner spInicio;
    private javax.swing.JSpinner spVel;
    private javax.swing.JSpinner spVelViento;
    private javax.swing.JTextPane tCX;
    private javax.swing.JTextPane tCY;
    private javax.swing.JTextPane tPX;
    private javax.swing.JTextPane tPY;
    private javax.swing.JTextPane tTiempo;
    // End of variables declaration//GEN-END:variables
}
